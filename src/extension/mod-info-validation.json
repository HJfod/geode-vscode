{
    "$schema": "http://json-schema.org/draft-04/schema#",
    "properties": {
        "geode": {
            "type": "string",
            "description": "Geode version to target.",
            "pattern": "v?([0-9]+|\\*)(\\.([0-9]+|\\*)){0,2}"
        },
        "version": {
            "type": "string",
            "description": "Version of the mod.",
            "pattern": "v?([0-9]+)(\\.([0-9]+)){0,2}"
        },
        "id": {
            "type": "string",
            "description": "ID of the mod. Recommended to be formatted as \"developer.mod-name\".",
            "pattern": "[a-zA-Z0-9-_\\.]+"
        },
        "name": {
            "type": "string",
            "description": "Name of the mod. May be anything, but do note that GD usually has limits on what characters it can render."
        },
        "developer": {
            "type": "string",
            "description": "Name of the mod developer. If the mod has multiple developers, use a group name like \"Geode Team\""
        },
        "description": {
            "type": "string",
            "description": "Short, free-form description of the mod."
        },
        "repository": {
            "type": "string",
            "description": "URL of the mod's Git repository, or other equivalent homepage."
        },
        "dependencies": {
            "type": [ "array", "null" ],
            "description": "List of mods this mod depends on.",
            "items": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "ID of the dependency.",
                        "pattern": "[a-zA-Z0-9-_\\.]+"
                    },
                    "version": {
                        "type": "string",
                        "description": "Version of the dependency. May use wildcards (*) if a specific version is not required.",
                        "pattern": "v?([0-9]+|\\*)(\\.([0-9]+|\\*)){0,2}"
                    },
                    "required": {
                        "type": "boolean",
                        "description": "Whether the dependency is required in order to load this mod.",
                        "default": true
                    }
                },
                "required": [ "id" ]
            }
        },
        "binary": {
            "type": [ "string", "object" ],
            "description": "Name of the mod's binary file (DLL on Windows, Dylib on Mac, etc.). May either be a single string for all platforms, or may specify one for each platform separately.",
            "properties": {
                "*": {
                    "type": "string",
                    "description": "Default binary name to use on all platforms."
                },
                "auto": {
                    "type": "boolean",
                    "description": "Whether to automatically append the platform-specific extension (.dll, .dylib, .so...) on the binary name if it's not specified.",
                    "default": true
                },
                "windows": {
                    "type": "string",
                    "description": "Binary name to use on Windows. Note that you need to set \"binary.auto\" to false if the binary's extension is not .dll."
                },
                "macos": {
                    "type": "string",
                    "description": "Binary name to use on Mac. Note that you need to set \"binary.auto\" to false if the binary's extension is not .dylib."
                },
                "ios": {
                    "type": "string",
                    "description": "Binary name to use on iOS. Note that you need to set \"binary.auto\" to false if the binary's extension is not .dylib."
                },
                "android": {
                    "type": "string",
                    "description": "Binary name to use on Android. Note that you need to set \"binary.auto\" to false if the binary's extension is not .so."
                }
            }
        },
        "datastore": {
            "type": [ "object", "null" ],
            "description": "The mod's save data. May be anything. Also used to specify settings (TODO)."
        },
        "resources": {
            "type": [ "object", "null" ],
            "description": "The mod's resources. Used in conjuction with Geode CLI to automatically process & package resources for the mod.",
            "properties": {
                "fonts": {
                    "type": [ "object", "null" ],
                    "description": "Fonts to include with the mod. Provided format should be TTF / OTF. Fonts will be converted automatically into GD-compatible BM fonts by Geode CLI before packaging. List the names of the fonts as keys.",
                    "additionalProperties": {
                        "type": "object",
                        "properties": {
                            "path": {
                                "type": "string",
                                "description": "Path to the font's TTF / OTF file (relative to mod root folder)."
                            },
                            "size": {
                                "type": "integer",
                                "description": "Font size.",
                                "minimum": 0
                            },
                            "charset": {
                                "type": "string",
                                "description": "List of characters to include in the generated BM font. Default is \"32-126,8226\"",
                                "pattern": "[0-9]+(\\-[0-9]+)?(\\,([0-9]+(\\-[0-9]+)?))*",
                                "default": "32-126,8226"
                            },
                            "outline": {
                                "type": "integer",
                                "description": "If specified, will generate a black outline of the provided size around the font's characters.",
                                "minimum": 0
                            }
                        },
                        "required": [ "path", "size" ]
                    }
                },
                "files": {
                    "type": [ "array", "null" ],
                    "description": "Files to include with the mod. Files will be prefixed with the mod's ID to avoid name conflicts. Use for including sprites, sounds, etc.",
                    "items": {
                        "type": "string",
                        "description": "Path to the file(s) to include, relative to the mod's root folder. Paths support wildcards, so one can for example include a bunch of image files using \"resources/sprites/*.png\"."
                    }
                },
                "raw": {
                    "type": [ "array", "null" ],
                    "description": "Files to include as-is with the mod. Recommended only for files that absolutely must be included with its original name.",
                    "items": {
                        "type": "string",
                        "description": "Path to the file(s) to include, relative to the mod's root folder. Paths support wildcards, so one can for example include a bunch of image files using \"resources/sprites/*.png\"."
                    }
                },
                "spritesheets": {
                    "type": [ "object", "null" ],
                    "description": "The mod's sprite sheets. Sprite sheets are better optimized than using individual image files, so using them for the majority of the sprites in your mod is recommended. List the names of the mod's spritesheets as keys, and as their values a list of files to include in the sheet.",
                    "additionalProperties": {
                        "type": "array",
                        "description": "A list of files to include in this spritesheet.",
                        "items": {
                            "type": "string",
                            "description": "Path to the file(s) to include, relative to the mod's root folder. Paths support wildcards, so one can for example include a bunch of image files using \"resources/sprites/*.png\"."
                        }
                    }
                }
            }
        },
        "toggleable": {
            "type": "boolean",
            "description": "Whether the mod can be disabled at runtime or not.",
            "default": true
        },
        "unloadable": {
            "type": "boolean",
            "description": "Whether the mod can be safely unloaded at runtime or not.",
            "default": false
        },
        "userdata": {
            "description": "Any user-specific data you wish to include with the mod info. This key is not touched by Geode at all and will be preserved as-is. Will likely be removed in the future."
        }
    },
    "required": [ "geode", "version", "id", "name", "developer" ]
}